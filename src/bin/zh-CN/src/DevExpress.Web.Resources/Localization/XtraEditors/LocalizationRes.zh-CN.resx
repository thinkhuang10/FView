<?xml version="1.0" encoding="utf-8"?>
<root>
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"></xsd:import>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="type" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="mimetype" type="xsd:string"></xsd:attribute>
              <xsd:attribute ref="xml:space"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="name" type="xsd:string"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"></xsd:element>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"></xsd:attribute>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"></xsd:attribute>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"></xsd:attribute>
              <xsd:attribute ref="xml:space"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="StringId.CheckChecked" xml:space="preserve">
    <value>校验</value>
  </data>
  <data name="StringId.CheckIndeterminate" xml:space="preserve">
    <value>不确定</value>
  </data>
  <data name="StringId.Cancel" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="StringId.OK" xml:space="preserve">
    <value>确定(&amp;O)</value>
  </data>
  <data name="StringId.CheckUnchecked" xml:space="preserve">
    <value>非校验</value>
  </data>
  <data name="StringId.DefaultBooleanDefault" xml:space="preserve">
    <value>默认值</value>
  </data>
  <data name="StringId.DefaultBooleanTrue" xml:space="preserve">
    <value>True</value>
  </data>
  <data name="StringId.FilterAggregateMin" xml:space="preserve">
    <value>Min</value>
  </data>
  <data name="StringId.FilterClauseContains" xml:space="preserve">
    <value>包含</value>
  </data>
  <data name="StringId.FilterClauseDoesNotContain" xml:space="preserve">
    <value>不包含</value>
  </data>
  <data name="StringId.FilterClauseDoesNotEqual" xml:space="preserve">
    <value>不等于</value>
  </data>
  <data name="StringId.FilterClauseEquals" xml:space="preserve">
    <value>等于</value>
  </data>
  <data name="StringId.FilterClauseIsNull" xml:space="preserve">
    <value>为空</value>
  </data>
  <data name="StringId.FilterAggregateCount" xml:space="preserve">
    <value>计数</value>
  </data>
  <data name="StringId.FilterAggregateExists" xml:space="preserve">
    <value>存在</value>
  </data>
  <data name="StringId.FilterAggregateMax" xml:space="preserve">
    <value>最大值</value>
  </data>
  <data name="StringId.FilterAggregateSum" xml:space="preserve">
    <value>总和</value>
  </data>
  <data name="StringId.FilterClauseBeginsWith" xml:space="preserve">
    <value>开头</value>
  </data>
  <data name="StringId.FilterClauseBetween" xml:space="preserve">
    <value>之间</value>
  </data>
  <data name="StringId.FilterClauseEndsWith" xml:space="preserve">
    <value>以结束</value>
  </data>
  <data name="StringId.FilterClauseGreater" xml:space="preserve">
    <value>大于</value>
  </data>
  <data name="StringId.FilterClauseLess" xml:space="preserve">
    <value>小于</value>
  </data>
  <data name="StringId.FilterClauseLessOrEqual" xml:space="preserve">
    <value>小于或等于</value>
  </data>
  <data name="StringId.FilterClauseNoneOf" xml:space="preserve">
    <value>不关</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionIsOutlookIntervalToday" xml:space="preserve">
    <value>今天</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionIsOutlookIntervalTomorrow" xml:space="preserve">
    <value>明天</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionIsOutlookIntervalYesterday" xml:space="preserve">
    <value>昨天</value>
  </data>
  <data name="StringId.FilterEmptyEnter" xml:space="preserve">
    <value>&lt; 输入值 &gt;</value>
  </data>
  <data name="StringId.FilterGroupAnd" xml:space="preserve">
    <value>和</value>
  </data>
  <data name="StringId.FilterGroupNotAnd" xml:space="preserve">
    <value>不和</value>
  </data>
  <data name="StringId.FilterMenuConditionAdd" xml:space="preserve">
    <value>添加条件</value>
  </data>
  <data name="StringId.FilterMenuGroupAdd" xml:space="preserve">
    <value>添加组</value>
  </data>
  <data name="StringId.FilterClauseGreaterOrEqual" xml:space="preserve">
    <value>大于或等于</value>
  </data>
  <data name="StringId.FilterClauseNotBetween" xml:space="preserve">
    <value>不在...之间</value>
  </data>
  <data name="StringId.PreviewError" xml:space="preserve">
    <value>错误</value>
  </data>
  <data name="StringId.PreviewPrinting" xml:space="preserve">
    <value>打印</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionIsOutlookIntervalLastWeek" xml:space="preserve">
    <value>上周</value>
  </data>
  <data name="StringId.FilterAggregateAvg" xml:space="preserve">
    <value>平均</value>
  </data>
  <data name="StringId.FilterClauseIsNotNullOrEmpty" xml:space="preserve">
    <value>不为空</value>
  </data>
  <data name="StringId.FilterClauseIsNullOrEmpty" xml:space="preserve">
    <value>为空</value>
  </data>
  <data name="StringId.FilterClauseLike" xml:space="preserve">
    <value>包含</value>
  </data>
  <data name="StringId.FilterClauseNotLike" xml:space="preserve">
    <value>不包含</value>
  </data>
  <data name="StringId.FilterGroupOr" xml:space="preserve">
    <value>或</value>
  </data>
  <data name="StringId.FilterClauseIsNotNull" xml:space="preserve">
    <value>非空</value>
  </data>
</root>